grid.arrange(g1, g4, widths = c(2, 3), ncol = 2)
grid.arrange(g1, g4, widths = c(2, 4), ncol = 2)
grid.arrange(g2, g5, widths = c(2, 4), ncol = 2)
grid.arrange(g3, g6, widths = c(2, 4), ncol = 2)
pdf("../images/Scatterplots/AggMap1.pdf", height = 5, width = 11)
grid.arrange(g1, g4, widths = c(2, 4), ncol = 2)
dev.off()
pdf("../images/Scatterplots/AggMap2.pdf", height = 5, width = 11)
grid.arrange(g2, g5, widths = c(2, 4), ncol = 2)
dev.off()
pdf("../images/Scatterplots/AggMap3.pdf", height = 5, width = 11)
grid.arrange(g3, g6, widths = c(2, 4), ncol = 2)
dev.off()
pdf("../images/final/ScatterBottom1.pdf", height = 5, width = 11)
grid.arrange(g1, g4, widths = c(2, 4), ncol = 2)
dev.off()
pdf("../images/final/ScatterBottom2.pdf", height = 5, width = 11)
grid.arrange(g2, g5, widths = c(2, 4), ncol = 2)
dev.off()
pdf("../images/final/ScatterBottom3.pdf", height = 5, width = 11)
grid.arrange(g3, g6, widths = c(2, 4), ncol = 2)
dev.off()
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank())
lags <- scatter[is.element(scatter$lag, c(1, 3, 5)), ]
# set up parameters for plotting. I don't end up using all of these, but I left
# them in case we need them later.
lags$alphaP1 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s1$AirPtCd)), 1, 0.4)
lags$sizeP1 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s1$AirPtCd)), 2, 1)
lags$shapeP1 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s1$AirPtCd)), 21, 16)
lags$bordP1 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s1$AirPtCd)), "black", lags$color)
lags$alphaP2 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s2$AirPtCd)), 1, 0.4)
lags$sizeP2 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s2$AirPtCd)), 2, 1)
lags$shapeP2 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s2$AirPtCd)), 21, 16)
lags$bordP2 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s2$AirPtCd)), "black", lags$color)
lags$alphaP3 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s3$AirPtCd)), 1, 0.4)
lags$sizeP3 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s3$AirPtCd)), 2, 1)
lags$shapeP3 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s3$AirPtCd)), 21, 16)
lags$bordP3 <- ifelse(is.element(as.character(lags$AirPtCd), as.character(s3$AirPtCd)), "black", lags$color)
lag1 <- lags[lags$lag == 1, ]
lag3 <- lags[lags$lag == 3, ]
lag5 <- lags[lags$lag == 5, ]
# Plots showing bad min temps
lagP1.l1 <- ggplot(lag1, aes(x = mnT_mean_abs, y = BSS)) +
geom_point(color = lag1$color, alpha = lag1$alphaP1, size = lag1$sizeP1) +
theme_bw() +
coord_fixed(ratio = 2.8, xlim = c(2, 8), ylim = c(0.4, 2.7), expand = TRUE) +
scale_x_continuous(breaks = c(2:8)) +
scale_y_continuous(breaks = c(seq(0.5, 2.5, 0.5))) +
labs(title = "Forecast Lag 1", x = "", y = "") +
theme(axis.text.y = element_blank(), plot.margin=unit(c(1, 1, 1, -0.10), "cm"))
lagP1.l3 <- ggplot(lag3, aes(x = mnT_mean_abs, y = BSS)) +
geom_point(color = lag3$color, alpha = lag3$alphaP1, size = lag3$sizeP1) +
theme_bw() +
coord_fixed(ratio = 2.8, xlim = c(2, 8), ylim = c(0.4, 2.7), expand = TRUE) +
scale_x_continuous(breaks = c(2:8)) +
scale_y_continuous(breaks = c(seq(0.5, 2.5, 0.5))) +
labs(title = "Forecast Lag 3", x = "Minimum Temperature (F)", y = "") +
theme(axis.text.y = element_blank(), plot.margin=unit(c(1, -0.10, 1, -0.10), "cm"))
lagP1.l5 <- ggplot(lag5, aes(x = mnT_mean_abs, y = BSS)) +
geom_point(color = lag5$color, alpha = lag5$alphaP1, size = lag5$sizeP1) +
theme_bw() +
coord_fixed(ratio = 2.8, xlim = c(2, 8), ylim = c(0.4, 2.7), expand = TRUE) +
scale_x_continuous(breaks = c(2:8)) +
scale_y_continuous(breaks = c(seq(0.5, 2.5, 0.5))) +
labs(title = "Forecast Lag 5", x = "", y = "Precipitation (1-BSS)") +
theme(plot.margin=unit(c(1, -0.10, 1, 1), "cm"))
# grid.arrange(lagP1.l5, lagP1.l3, lagP1.l1, ncol = 3)
pdf("../images/Scatterplots/LagP1.pdf", height = 5, width = 11)
grid.draw(cbind(ggplotGrob(lagP1.l5), ggplotGrob(lagP1.l3), ggplotGrob(lagP1.l1), size = "last"))
dev.off()
# Plots showing bad precips
lagP2.l1 <- ggplot(lag1, aes(x = mxT_mean_abs, y = BSS)) +
geom_point(color = lag1$color, alpha = lag1$alphaP2, size = lag1$sizeP2) +
theme_bw() +
coord_fixed(ratio = 2.6, xlim = c(1.25, 7), ylim = c(0.4, 2.7), expand = TRUE) +
scale_x_continuous(breaks = c(1:7)) +
scale_y_continuous(breaks = c(seq(0.5, 2.5, 0.5))) +
labs(title = "Forecast Lag 1", x = "", y = "") +
theme(axis.text.y = element_blank(), plot.margin=unit(c(1, 1, 1, -0.10), "cm"))
lagP2.l3 <- ggplot(lag3, aes(x = mxT_mean_abs, y = BSS)) +
geom_point(color = lag3$color, alpha = lag3$alphaP2, size = lag3$sizeP2) +
theme_bw() +
coord_fixed(ratio = 2.6, xlim = c(1.25, 7), ylim = c(0.4, 2.7), expand = TRUE) +
scale_x_continuous(breaks = c(1:7)) +
scale_y_continuous(breaks = c(seq(0.5, 2.5, 0.5))) +
labs(title = "Forecast Lag 3", x = "Maximum Temperature (F)", y = "") +
theme(axis.text.y = element_blank(), plot.margin=unit(c(1, -0.10, 1, -0.10), "cm"))
lagP2.l5 <- ggplot(lag5, aes(x = mxT_mean_abs, y = BSS)) +
geom_point(color = lag5$color, alpha = lag5$alphaP2, size = lag5$sizeP2) +
theme_bw() +
coord_fixed(ratio = 2.6, xlim = c(1.25, 7), ylim = c(0.4, 2.7), expand = TRUE) +
scale_x_continuous(breaks = c(1:7)) +
scale_y_continuous(breaks = c(seq(0.5, 2.5, 0.5))) +
labs(title = "Forecast Lag 5", x = "", y = "Precipitation (1-BSS)") +
theme(plot.margin=unit(c(1, -0.10, 1, 1), "cm"))
# grid.arrange(lagP2.l5, lagP2.l3, lagP2.l1, ncol = 3)
pdf("../images/Scatterplots/LagP2.pdf", height = 5, width = 11)
grid.draw(cbind(ggplotGrob(lagP2.l5), ggplotGrob(lagP2.l3), ggplotGrob(lagP2.l1), size = "last"))
dev.off()
# Plots showing outliers
lagP3.l1 <- ggplot(lag1, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = lag1$color, alpha = lag1$alphaP3, size = lag1$sizeP3) +
theme_bw() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
scale_x_continuous(breaks = c(2:8)) +
scale_y_continuous(breaks = c(1:7)) +
labs(title = "Forecast Lag 1", x = "", y = "") +
theme(axis.text.y = element_blank(), plot.margin=unit(c(1, 1, 1, -0.10), "cm"))
lagP3.l3 <- ggplot(lag3, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = lag3$color, alpha = lag3$alphaP3, size = lag3$sizeP3) +
theme_bw() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
scale_x_continuous(breaks = c(2:8)) +
scale_y_continuous(breaks = c(1:7)) +
labs(title = "Forecast Lag 3", x = "Minimum Temperature (F)", y = "") +
theme(axis.text.y = element_blank(), plot.margin=unit(c(1, -0.10, 1, -0.10), "cm"))
lagP3.l5 <- ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = lag5$color, alpha = lag5$alphaP3, size = lag5$sizeP3) +
theme_bw() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
scale_x_continuous(breaks = c(2:8)) +
scale_y_continuous(breaks = c(1:7)) +
labs(title = "Forecast Lag 5", x = "", y = "Maximum Temperature (F)") +
theme(plot.margin=unit(c(1, -0.10, 1, 1), "cm"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
axis.line = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "white"),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_point(color = "white") +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_bw() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
theme_minimal() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
grid.draw(cbind(ggplotGrob(lagP1.l5), ggplotGrob(lagP1.l3), ggplotGrob(lagP1.l1), NULL, size = "last"))
grid.draw(cbind(ggplotGrob(lagP1.l5), ggplotGrob(lagP1.l3), ggplotGrob(lagP1.l1), NA, size = "last"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_minimal() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_line(colour = 'white', size=0.5, linetype='solid')
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_minimal() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_line(colour = 'white', size=0.5, linetype='solid'),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_minimal() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_line(colour = 'white', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'white', size=0.5, linetype='solid'),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
dummy <- ggplot(lag5, aes(x = mnT_mean_abs, y = mxT_mean_abs)) +
geom_blank() +
coord_fixed(ratio = 1.1, xlim = c(2, 8), ylim = c(1.25, 7), expand = TRUE) +
# theme_minimal() +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_line(colour = 'white', size=0.5, linetype='solid'),
axis.line.y = element_line(colour = 'white', size=0.5, linetype='solid'),
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),
# axis.line = element_line(colour = "white"),
panel.border = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = "white"))
grid.draw(cbind(ggplotGrob(lagP2.l5), ggplotGrob(lagP2.l3), ggplotGrob(lagP2.l1),
ggplotGrob(dummy), size = "last"))
pdf("../images/final/ScatterTop2.pdf", height = 5, width = 11)
grid.draw(cbind(ggplotGrob(lagP2.l5), ggplotGrob(lagP2.l3), ggplotGrob(lagP2.l1),
ggplotGrob(dummy), size = "last"))
dev.off()
pdf("../images/final/ScatterTop2.pdf", height = 5, width = 11)
grid.draw(cbind(ggplotGrob(lagP2.l5), ggplotGrob(lagP2.l3), ggplotGrob(lagP2.l1),
ggplotGrob(dummy), size = "first"))
dev.off()
pdf("../images/final/ScatterTop1.pdf", height = 5, width = 11)
grid.draw(cbind(ggplotGrob(lagP1.l5), ggplotGrob(lagP1.l3), ggplotGrob(lagP1.l1),
ggplotGrob(dummy), size = "first"))
dev.off()
pdf("../images/final/ScatterTop3.pdf", height = 5, width = 11)
grid.draw(cbind(ggplotGrob(lagP3.l5), ggplotGrob(lagP3.l3), ggplotGrob(lagP3.l1),
ggplotGrob(dummy), size = "first"))
dev.off()
shiny::runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
runApp('C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter')
setwd("C:/Users/jflun/Dropbox/USU/Advanced Graphics II/Data Expo/DataExpo2018/Shiny Apps/BrushedScatter")
clust = read.csv("data/locationsFinal.csv")
weather1 = read.csv("data/summary_lag_shiny.csv")
weather1 = left_join(weather1, clust[, c(6, 18:21)])
weather1 = weather1[, c(36, 34, 37, 1:33, 35, 38:47)]
weather1$BSS = 1 - weather1$BSS
longitude = c(-117.25, -108.50)
latitude = c(27.2, 27)
weather1$latitude[weather1$state == "Alaska"] = latitude[1]
weather1$latitude[weather1$state == "Hawaii"] = latitude[2]
weather1$longitude[weather1$state == "Alaska"] = longitude[1]
weather1$longitude[weather1$state == "Hawaii"] = longitude[2]
weather1$state = tolower(weather1$state)
weather1 = tbl_df(weather1)
weather1 = weather1[, c(46:47, 39:41, 1:3, 5, 45)]
colnames(weather1)[c(1:2, 6:8)] = c("Station", "Cluster", "MinTempError", "MaxTempError", "BSS")
weather1[, c(6:8)] = round(weather1[, c(6:8)], 3)
colnames(weather1)
weather1 = weather1[, c(1, 2, 6:10, 3:5)]
colnames(weather1)
runApp()
length(colnames(weather1))
runApp()
runApp()
shiny::runApp()
install.packages(GGally)
install.packages(reshape2)
install.packages(lubridate)
install.packages(tidyr)
install.packages(cluster)
install.packages(fpc)
install.packages(ggmap)
install.packages(gridExtra)
install.packages(grid)
install.packages(dplyr)
install.packages(shiny)
install.packages(rgl)
install.packages(maps)
install.packages(mapdata)
install.packages(RColorBrewer)
install.packages(ggplot2)
install.packages(fiftystater)
install.packages(maps)
install.packages(shinythemes)
install.packages(shinydashboard)
install.packages("GGally")
install.packages("reshape2")
install.packages("lubridate")
install.packages("tidyr")
install.packages("cluster")
install.packages("fpc")
install.packages("GGally")
shiny::runApp()
install.packages("fpc")
runApp()
install.packages("rgl")
runApp()
install.packages("GGally")
install.packages("reshape2")
install.packages("lubridate")
install.packages("tidyr")
install.packages("cluster")
install.packages("fpc")
install.packages("ggmap")
install.packages("gridExtra")
install.packages("grid")
install.packages("dplyr")
install.packages("shiny")
install.packages("rgl")
install.packages("maps")
install.packages("mapdata")
install.packages("RColorBrewer")
install.packages("ggplot2")
install.packages("fiftystater")
install.packages("maps")
install.packages("shinythemes")
install.packages("GGally")
install.packages("GGally")
install.packages("reshape2")
install.packages("lubridate")
install.packages("tidyr")
install.packages("cluster")
install.packages("fpc")
install.packages("ggmap")
install.packages("gridExtra")
install.packages("grid")
install.packages("dplyr")
install.packages("shiny")
install.packages("rgl")
install.packages("maps")
install.packages("mapdata")
install.packages("RColorBrewer")
install.packages("ggplot2")
install.packages("fiftystater")
install.packages("maps")
install.packages("shinythemes")
install.packages("shinydashboard")
shiny::runApp()
install.packages("lubridate")
runApp()
install.packages("tidyr")
runApp()
install.packages("utf8")
runApp()
?melt
